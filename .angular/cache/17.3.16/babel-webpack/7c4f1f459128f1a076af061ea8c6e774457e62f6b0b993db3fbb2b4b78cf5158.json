{"ast":null,"code":"import * as d3 from 'd3';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/tree-visualization-service\";\nconst _c0 = [\"treeContainer\"];\nexport let TreeVisualizationComponent = /*#__PURE__*/(() => {\n  class TreeVisualizationComponent {\n    treeVisualizationService;\n    treeContainer;\n    subscription;\n    data = {\n      name: 'Eve',\n      children: [{\n        name: 'Cain'\n      }, {\n        name: 'Seth',\n        children: [{\n          name: 'Enos'\n        }, {\n          name: 'Noam'\n        }]\n      }, {\n        name: 'Abel'\n      }, {\n        name: 'Awan',\n        children: [{\n          name: 'Enoch'\n        }]\n      }, {\n        name: 'Azura'\n      }]\n    };\n    constructor(treeVisualizationService) {\n      this.treeVisualizationService = treeVisualizationService;\n    }\n    ngOnInit() {\n      var width = 400,\n        height = 400;\n      var data = [10, 15, 20, 25, 30];\n      var svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n      var xscale = d3.scaleLinear().domain([0, 30]).range([0, width - 100]); // 讓最大值 30 對應到 300\n      var yscale = d3.scaleLinear().domain([0, 30]).range([height / 2, 0]); //200 是y軸起點(畫面由左上開始計算)\n      var x_axis = d3.axisBottom(xscale).scale(xscale);\n      var y_axis = d3.axisLeft(yscale).scale(yscale);\n      svg.append(\"g\").attr(\"transform\", \"translate(50, 10)\") // 50 是y軸線往右搬，10 往下搬一點(上方邊界)\n      .call(y_axis);\n      var xAxisTranslate = height / 2 + 10; // y軸的長度，10 是上方邊界\n      svg.append(\"g\").attr(\"transform\", \"translate(50, \" + xAxisTranslate + \")\").call(x_axis);\n    }\n    ngAfterViewInit() {}\n    refresh(data) {\n      const initNode = this.treeVisualizationService.getInitNode(data);\n      this.treeContainer.nativeElement.appendChild(initNode);\n    }\n    createNode() {}\n    deleteNode() {}\n    selectedNodes() {}\n    resetView() {\n      // Implement reset functionality if needed\n    }\n    ngOnDestroy() {}\n    static ɵfac = function TreeVisualizationComponent_Factory(t) {\n      return new (t || TreeVisualizationComponent)(i0.ɵɵdirectiveInject(i1.TreeVisualizationService));\n    };\n    static ɵcmp = (() => /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TreeVisualizationComponent,\n      selectors: [[\"app-tree-visualization\"]],\n      viewQuery: function TreeVisualizationComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.treeContainer = _t.first);\n        }\n      },\n      decls: 12,\n      vars: 0,\n      consts: [[\"treeContainer\", \"\"], [1, \"tree-container\"], [1, \"tree-controls\"], [1, \"reset-button\", 3, \"click\"], [3, \"click\"], [1, \"tree-visualization\"]],\n      template: function TreeVisualizationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function TreeVisualizationComponent_Template_button_click_2_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.resetView());\n          });\n          i0.ɵɵtext(3, \"\\u91CD\\u7F6E\\u8996\\u5716\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function TreeVisualizationComponent_Template_button_click_4_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.createNode());\n          });\n          i0.ɵɵtext(5, \"\\u65B0\\u589E\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function TreeVisualizationComponent_Template_button_click_6_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.deleteNode());\n          });\n          i0.ɵɵtext(7, \"\\u522A\\u9664\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function TreeVisualizationComponent_Template_button_click_8_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.selectedNodes());\n          });\n          i0.ɵɵtext(9, \"\\u5DF2\\u9078\\u53D6\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(10, \"div\", 5, 0);\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\".tree-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 600px;\\n  border: 1px solid #ccc;\\n  overflow: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90cmVlLXZpc3VhbGl6YXRpb24vdHJlZS12aXN1YWxpemF0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLGdCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIudHJlZS1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA2MDBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    }))();\n  }\n  return TreeVisualizationComponent;\n})();","map":{"version":3,"names":["d3","TreeVisualizationComponent","treeVisualizationService","treeContainer","subscription","data","name","children","constructor","ngOnInit","width","height","svg","select","append","attr","xscale","scaleLinear","domain","range","yscale","x_axis","axisBottom","scale","y_axis","axisLeft","call","xAxisTranslate","ngAfterViewInit","refresh","initNode","getInitNode","nativeElement","appendChild","createNode","deleteNode","selectedNodes","resetView","ngOnDestroy","i0","ɵɵdirectiveInject","i1","TreeVisualizationService","selectors","viewQuery","TreeVisualizationComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","TreeVisualizationComponent_Template_button_click_2_listener","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵtext","ɵɵelementEnd","TreeVisualizationComponent_Template_button_click_4_listener","TreeVisualizationComponent_Template_button_click_6_listener","TreeVisualizationComponent_Template_button_click_8_listener","ɵɵelement"],"sources":["/Users/reynolds/cursor/d3js_example2/angular8-app/src/app/components/tree-visualization/tree-visualization.component.ts","/Users/reynolds/cursor/d3js_example2/angular8-app/src/app/components/tree-visualization/tree-visualization.component.html"],"sourcesContent":["import {Component, OnInit, ElementRef, ViewChild, AfterViewInit, OnDestroy} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport * as d3 from 'd3';\nimport {TreeNode} from '../../interfaces/interfaces';\nimport {TreeVisualizationService} from '../../services/tree-visualization-service';\nimport {range} from 'd3';\n\n@Component({\n  selector: 'app-tree-visualization',\n  templateUrl: './tree-visualization.component.html',\n  styleUrls: ['./tree-visualization.component.scss']\n})\nexport class TreeVisualizationComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('treeContainer', {static: true}) public treeContainer!: ElementRef;\n  private subscription: Subscription | undefined;\n\n  data: TreeNode = {\n    name: 'Eve',\n    children: [\n      {name: 'Cain'},\n      {name: 'Seth', children: [{name: 'Enos'}, {name: 'Noam'}]},\n      {name: 'Abel'},\n      {name: 'Awan', children: [{name: 'Enoch'}]},\n      {name: 'Azura'}\n    ]\n  };\n\n  constructor(private treeVisualizationService: TreeVisualizationService) {\n  }\n\n  ngOnInit(): void {\n    var width = 400, height = 400;\n    var data = [10, 15, 20, 25, 30];\n\n    var svg = d3.select(\"body\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    var xscale = d3.scaleLinear()\n      .domain([0, 30])\n      .range([0, width - 100]);// 讓最大值 30 對應到 300\n\n    var yscale = d3.scaleLinear()\n      .domain([0, 30])\n      .range([height/2, 0]); //200 是y軸起點(畫面由左上開始計算)\n\n    var x_axis = d3.axisBottom(xscale)\n      .scale(xscale);\n\n    var y_axis = d3.axisLeft(yscale)\n      .scale(yscale);\n\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(50, 10)\") // 50 是y軸線往右搬，10 往下搬一點(上方邊界)\n      .call(y_axis);\n\n    var xAxisTranslate = height/2 + 10; // y軸的長度，10 是上方邊界\n\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(50, \" + xAxisTranslate  +\")\")\n      .call(x_axis)\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  refresh(data: TreeNode): void {\n    const initNode =\n      this.treeVisualizationService.getInitNode(data);\n    this.treeContainer.nativeElement.appendChild(initNode);\n  }\n\n  createNode(): void {\n  }\n\n  deleteNode(): void {\n  }\n\n  selectedNodes(): void {\n  }\n\n  resetView(): void {\n    // Implement reset functionality if needed\n  }\n\n  ngOnDestroy(): void {\n  }\n}\n","<div class=\"tree-container\">\n  <div class=\"tree-controls\">\n    <button class=\"reset-button\" (click)=\"resetView()\">重置視圖</button>\n    <button (click)=\"createNode()\">新增</button>\n    <button (click)=\"deleteNode()\">刪除</button>\n    <button (click)=\"selectedNodes()\">已選取</button>\n  </div>\n  <div #treeContainer class=\"tree-visualization\"></div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}